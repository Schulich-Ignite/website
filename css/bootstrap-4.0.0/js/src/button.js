import $ from"jquery";const Button=(t=>{const e="button",s="bs.button",n=t.fn[e],a="active",i="btn",o="focus",l='[data-toggle^="button"]',c='[data-toggle="buttons"]',r="input",u=".active",f=".btn",d={CLICK_DATA_API:"click.bs.button.data-api",FOCUS_BLUR_DATA_API:"focus.bs.button.data-api blur.bs.button.data-api"};class h{constructor(t){this._element=t}static get VERSION(){return"4.0.0"}toggle(){let e=!0,s=!0;const n=t(this._element).closest(c)[0];if(n){const i=t(this._element).find(r)[0];if(i){if("radio"===i.type)if(i.checked&&t(this._element).hasClass(a))e=!1;else{const e=t(n).find(u)[0];e&&t(e).removeClass(a)}if(e){if(i.hasAttribute("disabled")||n.hasAttribute("disabled")||i.classList.contains("disabled")||n.classList.contains("disabled"))return;i.checked=!t(this._element).hasClass(a),t(i).trigger("change")}i.focus(),s=!1}}s&&this._element.setAttribute("aria-pressed",!t(this._element).hasClass(a)),e&&t(this._element).toggleClass(a)}dispose(){t.removeData(this._element,s),this._element=null}static _jQueryInterface(e){return this.each((function(){let n=t(this).data(s);n||(n=new h(this),t(this).data(s,n)),"toggle"===e&&n[e]()}))}}return t(document).on(d.CLICK_DATA_API,l,e=>{e.preventDefault();let s=e.target;t(s).hasClass(i)||(s=t(s).closest(f)),h._jQueryInterface.call(t(s),"toggle")}).on(d.FOCUS_BLUR_DATA_API,l,e=>{const s=t(e.target).closest(f)[0];t(s).toggleClass(o,/^focus(in)?$/.test(e.type))}),t.fn[e]=h._jQueryInterface,t.fn[e].Constructor=h,t.fn[e].noConflict=function(){return t.fn[e]=n,h._jQueryInterface},h})($);export default Button;