$((function(){"use strict";QUnit.module("dropdowns plugin"),QUnit.test("should be defined on jquery object",(function(o){o.expect(1),o.ok($(document.body).dropdown,"dropdown method is defined")})),QUnit.module("dropdowns",{beforeEach:function(){$.fn.bootstrapDropdown=$.fn.dropdown.noConflict()},afterEach:function(){$.fn.dropdown=$.fn.bootstrapDropdown,delete $.fn.bootstrapDropdown}}),QUnit.test("should provide no conflict",(function(o){o.expect(1),o.strictEqual(typeof $.fn.dropdown,"undefined","dropdown was set back to undefined (org value)")})),QUnit.test("should throw explicit error on undefined method",(function(o){o.expect(1);var d=$("<div/>");d.bootstrapDropdown();try{d.bootstrapDropdown("noMethod")}catch(d){o.strictEqual(d.message,'No method named "noMethod"')}})),QUnit.test("should return jquery collection containing the element",(function(o){o.expect(2);var d=$("<div/>"),n=d.bootstrapDropdown();o.ok(n instanceof $,"returns jquery collection"),o.strictEqual(n[0],d[0],"collection contains element")})),QUnit.test("should not open dropdown if target is disabled via attribute",(function(o){o.expect(1);var d=o.async();$('<div class="tabs"><div class="dropdown"><button disabled href="#" class="btn dropdown-toggle" data-toggle="dropdown">Dropdown</button><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a><div class="divider"/><a class="dropdown-item" href="#">Another link</a></div></div></div>').appendTo("#qunit-fixture");var n=$("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown();n.on("click",(function(){o.ok(!n.parent(".dropdown").hasClass("show")),d()})),n.trigger($.Event("click"))})),QUnit.test("should not add class position-static to dropdown if boundary not set",(function(o){o.expect(1);var d=o.async(),n=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a></div></div></div>').find('[data-toggle="dropdown"]').bootstrapDropdown();n.parent(".dropdown").on("shown.bs.dropdown",(function(){o.ok(!n.parent(".dropdown").hasClass("position-static"),'"position-static" class not added'),d()})),n.trigger("click")})),QUnit.test("should add class position-static to dropdown if boundary not scrollParent",(function(o){o.expect(1);var d=o.async(),n=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown" data-boundary="viewport">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a></div></div></div>').find('[data-toggle="dropdown"]').bootstrapDropdown();n.parent(".dropdown").on("shown.bs.dropdown",(function(){o.ok(n.parent(".dropdown").hasClass("position-static"),'"position-static" class added'),d()})),n.trigger("click")})),QUnit.test('should set aria-expanded="true" on target when dropdown menu is shown',(function(o){o.expect(1);var d=o.async(),n=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a><div class="divider"/><a class="dropdown-item" href="#">Another link</a></div></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown();n.parent(".dropdown").on("shown.bs.dropdown",(function(){o.strictEqual(n.attr("aria-expanded"),"true",'aria-expanded is set to string "true" on click'),d()})),n.trigger("click")})),QUnit.test('should set aria-expanded="false" on target when dropdown menu is hidden',(function(o){o.expect(1);var d=o.async(),n=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" aria-expanded="false" data-toggle="dropdown">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a><div class="divider"/><a class="dropdown-item" href="#">Another link</a></div></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown();n.parent(".dropdown").on("hidden.bs.dropdown",(function(){o.strictEqual(n.attr("aria-expanded"),"false",'aria-expanded is set to string "false" on hide'),d()})),n.trigger("click"),$(document.body).trigger("click")})),QUnit.test("should not open dropdown if target is disabled via class",(function(o){o.expect(1);var d=o.async();$('<div class="tabs"><div class="dropdown"><button href="#" class="btn dropdown-toggle disabled" data-toggle="dropdown">Dropdown</button><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a><div class="divider"/><a class="dropdown-item" href="#">Another link</a></div></div></div>').appendTo("#qunit-fixture");var n=$("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown();n.on("click",(function(){o.ok(!n.parent(".dropdown").hasClass("show")),d()})),n.trigger($.Event("click"))})),QUnit.test("should add class show to menu if clicked",(function(o){o.expect(1);var d=o.async(),n=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a><div class="divider"/><a class="dropdown-item" href="#">Another link</a></div></div></div>').find('[data-toggle="dropdown"]').bootstrapDropdown();n.parent(".dropdown").on("shown.bs.dropdown",(function(){o.ok(n.parent(".dropdown").hasClass("show"),'"show" class added on click'),d()})),n.trigger("click")})),QUnit.test("should test if element has a # before assuming it's a selector",(function(o){o.expect(1);var d=o.async(),n=$('<div class="tabs"><div class="dropdown"><a href="/foo/" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a><div class="divider"/><a class="dropdown-item" href="#">Another link</a></div></div></div>').find('[data-toggle="dropdown"]').bootstrapDropdown();n.parent(".dropdown").on("shown.bs.dropdown",(function(){o.ok(n.parent(".dropdown").hasClass("show"),'"show" class added on click'),d()})),n.trigger("click")})),QUnit.test('should remove "show" class if body is clicked',(function(o){o.expect(2);var d=o.async(),n=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a><div class="divider"/><a class="dropdown-item" href="#">Another link</a></div></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown();n.parent(".dropdown").on("shown.bs.dropdown",(function(){o.ok(n.parent(".dropdown").hasClass("show"),'"show" class added on click'),$(document.body).trigger("click")})).on("hidden.bs.dropdown",(function(){o.ok(!n.parent(".dropdown").hasClass("show"),'"show" class removed'),d()})),n.trigger("click")})),QUnit.test('should remove "show" class if tabbing outside of menu',(function(o){o.expect(2);var d=o.async(),n=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a><div class="dropdown-divider"/><a class="dropdown-item" href="#">Another link</a></div></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown();n.parent(".dropdown").on("shown.bs.dropdown",(function(){o.ok(n.parent(".dropdown").hasClass("show"),'"show" class added on click');var d=$.Event("keyup");d.which=9,$(document.body).trigger(d)})).on("hidden.bs.dropdown",(function(){o.ok(!n.parent(".dropdown").hasClass("show"),'"show" class removed'),d()})),n.trigger("click")})),QUnit.test('should remove "show" class if body is clicked, with multiple dropdowns',(function(o){o.expect(7);var d=o.async(),n=$('<div class="nav"><div class="dropdown" id="testmenu"><a class="dropdown-toggle" data-toggle="dropdown" href="#testmenu">Test menu <span class="caret"/></a><div class="dropdown-menu"><a class="dropdown-item" href="#sub1">Submenu 1</a></div></div></div><div class="btn-group"><button class="btn">Actions</button><button class="btn dropdown-toggle" data-toggle="dropdown"></button><div class="dropdown-menu"><a class="dropdown-item" href="#">Action 1</a></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]'),e=n.first(),t=n.last();o.strictEqual(n.length,2,"two dropdowns"),e.parent(".dropdown").on("shown.bs.dropdown",(function(){o.strictEqual(e.parents(".show").length,1,'"show" class added on click'),o.strictEqual($("#qunit-fixture .dropdown-menu.show").length,1,"only one dropdown is shown"),$(document.body).trigger("click")})).on("hidden.bs.dropdown",(function(){o.strictEqual($("#qunit-fixture .dropdown-menu.show").length,0,'"show" class removed'),t.trigger("click")})),t.parent(".btn-group").on("shown.bs.dropdown",(function(){o.strictEqual(t.parent(".show").length,1,'"show" class added on click'),o.strictEqual($("#qunit-fixture .dropdown-menu.show").length,1,"only one dropdown is shown"),$(document.body).trigger("click")})).on("hidden.bs.dropdown",(function(){o.strictEqual($("#qunit-fixture .dropdown-menu.show").length,0,'"show" class removed'),d()})),e.trigger("click")})),QUnit.test('should remove "show" class if body if tabbing outside of menu, with multiple dropdowns',(function(o){o.expect(7);var d=o.async(),n=$('<div class="nav"><div class="dropdown" id="testmenu"><a class="dropdown-toggle" data-toggle="dropdown" href="#testmenu">Test menu <span class="caret"/></a><div class="dropdown-menu"><a class="dropdown-item" href="#sub1">Submenu 1</a></div></div></div><div class="btn-group"><button class="btn">Actions</button><button class="btn dropdown-toggle" data-toggle="dropdown"><span class="caret"/></button><div class="dropdown-menu"><a class="dropdown-item" href="#">Action 1</a></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]'),e=n.first(),t=n.last();o.strictEqual(n.length,2,"two dropdowns"),e.parent(".dropdown").on("shown.bs.dropdown",(function(){o.strictEqual(e.parents(".show").length,1,'"show" class added on click'),o.strictEqual($("#qunit-fixture .dropdown-menu.show").length,1,"only one dropdown is shown");var d=$.Event("keyup");d.which=9,$(document.body).trigger(d)})).on("hidden.bs.dropdown",(function(){o.strictEqual($("#qunit-fixture .dropdown-menu.show").length,0,'"show" class removed'),t.trigger("click")})),t.parent(".btn-group").on("shown.bs.dropdown",(function(){o.strictEqual(t.parent(".show").length,1,'"show" class added on click'),o.strictEqual($("#qunit-fixture .dropdown-menu.show").length,1,"only one dropdown is shown");var d=$.Event("keyup");d.which=9,$(document.body).trigger(d)})).on("hidden.bs.dropdown",(function(){o.strictEqual($("#qunit-fixture .dropdown-menu.show").length,0,'"show" class removed'),d()})),e.trigger("click")})),QUnit.test("should fire show and hide event",(function(o){o.expect(2);var d=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a><div class="divider"/><a class="dropdown-item" href="#">Another link</a></div></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),n=o.async();d.parent(".dropdown").on("show.bs.dropdown",(function(){o.ok(!0,"show was fired")})).on("hide.bs.dropdown",(function(){o.ok(!0,"hide was fired"),n()})),d.trigger("click"),$(document.body).trigger("click")})),QUnit.test("should fire shown and hidden event",(function(o){o.expect(2);var d=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a><div class="divider"/><a class="dropdown-item" href="#">Another link</a></div></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),n=o.async();d.parent(".dropdown").on("shown.bs.dropdown",(function(){o.ok(!0,"shown was fired")})).on("hidden.bs.dropdown",(function(){o.ok(!0,"hidden was fired"),n()})),d.trigger("click"),$(document.body).trigger("click")})),QUnit.test("should fire shown and hidden event with a relatedTarget",(function(o){o.expect(2);var d=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a><div class="divider"/><a class="dropdown-item" href="#">Another link</a></div></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),n=o.async();d.parent(".dropdown").on("hidden.bs.dropdown",(function(e){o.strictEqual(e.relatedTarget,d[0]),n()})).on("shown.bs.dropdown",(function(n){o.strictEqual(n.relatedTarget,d[0]),$(document.body).trigger("click")})),d.trigger("click")})),QUnit.test("should ignore keyboard events within <input>s and <textarea>s",(function(o){o.expect(3);var d=o.async(),n=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a><div class="divider"/><a class="dropdown-item" href="#">Another link</a><input type="text" id="input"><textarea id="textarea"/></div></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),e=$("#input"),t=$("#textarea");n.parent(".dropdown").on("shown.bs.dropdown",(function(){o.ok(!0,"shown was fired"),e.trigger("focus").trigger($.Event("keydown",{which:38})),o.ok($(document.activeElement).is(e),"input still focused"),t.trigger("focus").trigger($.Event("keydown",{which:38})),o.ok($(document.activeElement).is(t),"textarea still focused"),d()})),n.trigger("click")})),QUnit.test("should skip disabled element when using keyboard navigation",(function(o){o.expect(2);var d=o.async(),n=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item disabled" href="#">Disabled link</a><a class="dropdown-item" href="#">Another link</a></div></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown();n.parent(".dropdown").on("shown.bs.dropdown",(function(){o.ok(!0,"shown was fired"),n.trigger($.Event("keydown",{which:40})),n.trigger($.Event("keydown",{which:40})),o.ok(!$(document.activeElement).is(".disabled"),".disabled is not focused"),d()})),n.trigger("click")})),QUnit.test("should focus next/previous element when using keyboard navigation",(function(o){o.expect(4);var d=o.async(),n=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><div class="dropdown-menu"><a id="item1" class="dropdown-item" href="#">A link</a><a id="item2" class="dropdown-item" href="#">Another link</a></div></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown();n.parent(".dropdown").on("shown.bs.dropdown",(function(){o.ok(!0,"shown was fired"),n.trigger($.Event("keydown",{which:40})),o.ok($(document.activeElement).is($("#item1")),"item1 is focused"),$(document.activeElement).trigger($.Event("keydown",{which:40})),o.ok($(document.activeElement).is($("#item2")),"item2 is focused"),$(document.activeElement).trigger($.Event("keydown",{which:38})),o.ok($(document.activeElement).is($("#item1")),"item1 is focused"),d()})),n.trigger("click")})),QUnit.test("should not close the dropdown if the user clicks on a text field",(function(o){o.expect(2);var d=o.async(),n=$('<div class="dropdown"><button type="button" data-toggle="dropdown">Dropdown</button><div class="dropdown-menu"><input id="textField" type="text" /></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),e=$("#textField");e.on("click",(function(){o.ok(n.parent(".dropdown").hasClass("show"),"dropdown menu is shown"),d()})),n.parent(".dropdown").on("shown.bs.dropdown",(function(){o.ok(n.parent(".dropdown").hasClass("show"),"dropdown menu is shown"),e.trigger($.Event("click"))})),n.trigger("click")})),QUnit.test("should not close the dropdown if the user clicks on a textarea",(function(o){o.expect(2);var d=o.async(),n=$('<div class="dropdown"><button type="button" data-toggle="dropdown">Dropdown</button><div class="dropdown-menu"><textarea id="textArea"></textarea></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),e=$("#textArea");e.on("click",(function(){o.ok(n.parent(".dropdown").hasClass("show"),"dropdown menu is shown"),d()})),n.parent(".dropdown").on("shown.bs.dropdown",(function(){o.ok(n.parent(".dropdown").hasClass("show"),"dropdown menu is shown"),e.trigger($.Event("click"))})),n.trigger("click")})),QUnit.test("Dropdown should not use Popper.js in navbar",(function(o){o.expect(1);var d=o.async();$('<nav class="navbar navbar-expand-md navbar-light bg-light"><div class="dropdown">  <a class="nav-link dropdown-toggle" href="#" id="dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Dropdown</a>  <div class="dropdown-menu" aria-labelledby="dropdown">    <a class="dropdown-item" href="#">Action</a>    <a class="dropdown-item" href="#">Another action</a>    <a class="dropdown-item" href="#">Something else here</a>  </div></div></nav>').appendTo("#qunit-fixture");var n=$("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),e=n.next();n.parent(".dropdown").on("shown.bs.dropdown",(function(){o.ok(void 0===e.attr("style"),"No inline style applied by Popper.js"),d()})),n.trigger($.Event("click"))})),QUnit.test("should ignore keyboard events for <input>s and <textarea>s within dropdown-menu, except for escape key",(function(o){o.expect(7);var d=o.async(),n=$('<div class="tabs"><div class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><div class="dropdown-menu"><a class="dropdown-item" href="#">Secondary link</a><a class="dropdown-item" href="#">Something else here</a><div class="divider"/><a class="dropdown-item" href="#">Another link</a><input type="text" id="input"><textarea id="textarea"/></div></div></div>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),e=$("#input"),t=$("#textarea");n.parent(".dropdown").on("shown.bs.dropdown",(function(){e.trigger("focus").trigger($.Event("keydown",{which:32})),o.ok($(document.activeElement)[0]===e[0],"input still focused"),t.trigger("focus").trigger($.Event("keydown",{which:32})),o.ok($(document.activeElement)[0]===t[0],"textarea still focused"),e.trigger("focus").trigger($.Event("keydown",{which:38})),o.ok($(document.activeElement)[0]===e[0],"input still focused"),t.trigger("focus").trigger($.Event("keydown",{which:38})),o.ok($(document.activeElement)[0]===t[0],"textarea still focused"),e.trigger("focus").trigger($.Event("keydown",{which:40})),o.ok($(document.activeElement)[0]===e[0],"input still focused"),t.trigger("focus").trigger($.Event("keydown",{which:40})),o.ok($(document.activeElement)[0]===t[0],"textarea still focused"),e.trigger("focus").trigger($.Event("keydown",{which:27})),o.ok(!n.parent(".dropdown").hasClass("show"),"dropdown menu is not shown"),d()})),n.trigger("click")})),QUnit.test("should ignore space key events for <input>s within dropdown, and accept up, down and escape",(function(o){o.expect(6);var d=o.async(),n=$('<ul class="nav tabs">  <li class="dropdown">    <input type="text" id="input" data-toggle="dropdown">    <div class="dropdown-menu" role="menu">      <a id="item1" class="dropdown-item" href="#">Secondary link</a>      <a id="item2" class="dropdown-item" href="#">Something else here</a>      <div class="divider"></div>      <a class="dropdown-item" href="#">Another link</a>    </div>  </li></ul>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),e=$("#input");n.parent(".dropdown").one("shown.bs.dropdown",(function(){o.ok(!0,"shown was fired"),e.trigger("focus").trigger($.Event("keydown",{which:32})),o.ok(n.parent(".dropdown").hasClass("show"),"dropdown menu is shown"),o.ok($(document.activeElement).is(e),"input is still focused"),e.trigger("focus").trigger($.Event("keydown",{which:27})),o.ok(!n.parent(".dropdown").hasClass("show"),"dropdown menu is not shown"),n.parent(".dropdown").one("shown.bs.dropdown",(function(){e.trigger("focus").trigger($.Event("keydown",{which:40})),o.ok(document.activeElement===$("#item1")[0],"item1 is focused"),n.parent(".dropdown").one("shown.bs.dropdown",(function(){e.trigger("focus").trigger($.Event("keydown",{which:38})),o.ok(document.activeElement===$("#item1")[0],"item1 is focused"),d()})).bootstrapDropdown("toggle"),e.trigger("click")})),e.trigger("click")})),e.trigger("click")})),QUnit.test("should ignore space key events for <textarea>s within dropdown, and accept up, down and escape",(function(o){o.expect(6);var d=o.async(),n=$('<ul class="nav tabs">  <li class="dropdown">    <textarea id="textarea" data-toggle="dropdown"></textarea>    <div class="dropdown-menu" role="menu">      <a id="item1" class="dropdown-item" href="#">Secondary link</a>      <a id="item2" class="dropdown-item" href="#">Something else here</a>      <div class="divider"></div>      <a class="dropdown-item" href="#">Another link</a>    </div>  </li></ul>').appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),e=$("#textarea");n.parent(".dropdown").one("shown.bs.dropdown",(function(){o.ok(!0,"shown was fired"),e.trigger("focus").trigger($.Event("keydown",{which:32})),o.ok(n.parent(".dropdown").hasClass("show"),"dropdown menu is shown"),o.ok($(document.activeElement).is(e),"textarea is still focused"),e.trigger("focus").trigger($.Event("keydown",{which:27})),o.ok(!n.parent(".dropdown").hasClass("show"),"dropdown menu is not shown"),n.parent(".dropdown").one("shown.bs.dropdown",(function(){e.trigger("focus").trigger($.Event("keydown",{which:40})),o.ok(document.activeElement===$("#item1")[0],"item1 is focused"),n.parent(".dropdown").one("shown.bs.dropdown",(function(){e.trigger("focus").trigger($.Event("keydown",{which:38})),o.ok(document.activeElement===$("#item1")[0],"item1 is focused"),d()})).bootstrapDropdown("toggle"),e.trigger("click")})),e.trigger("click")})),e.trigger("click")}))}));