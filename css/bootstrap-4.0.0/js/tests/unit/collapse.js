$((function(){"use strict";QUnit.module("collapse plugin"),QUnit.test("should be defined on jquery object",(function(e){e.expect(1),e.ok($(document.body).collapse,"collapse method is defined")})),QUnit.module("collapse",{beforeEach:function(){$.fn.bootstrapCollapse=$.fn.collapse.noConflict()},afterEach:function(){$.fn.collapse=$.fn.bootstrapCollapse,delete $.fn.bootstrapCollapse}}),QUnit.test("should provide no conflict",(function(e){e.expect(1),e.strictEqual(typeof $.fn.collapse,"undefined","collapse was set back to undefined (org value)")})),QUnit.test("should throw explicit error on undefined method",(function(e){e.expect(1);var a=$("<div/>");a.bootstrapCollapse();try{a.bootstrapCollapse("noMethod")}catch(a){e.strictEqual(a.message,'No method named "noMethod"')}})),QUnit.test("should return jquery collection containing the element",(function(e){e.expect(2);var a=$("<div/>"),o=a.bootstrapCollapse();e.ok(o instanceof $,"returns jquery collection"),e.strictEqual(o[0],a[0],"collection contains element")})),QUnit.test("should show a collapsed element",(function(e){e.expect(2);var a=$('<div class="collapse"/>').bootstrapCollapse("show");e.ok(a.hasClass("show"),'has class "show"'),e.ok(!/height/i.test(a.attr("style")),"has height reset")})),QUnit.test("should show multiple collapsed elements",(function(e){e.expect(4);var a=e.async(),o=$('<a role="button" data-toggle="collapse" class="collapsed" href=".multi"/>').appendTo("#qunit-fixture"),s=$('<div class="collapse multi"/>').appendTo("#qunit-fixture"),t=$('<div class="collapse multi"/>').appendTo("#qunit-fixture");s.one("shown.bs.collapse",(function(){e.ok(s.hasClass("show"),'has class "show"'),e.ok(!/height/i.test(s.attr("style")),"has height reset")})),t.one("shown.bs.collapse",(function(){e.ok(t.hasClass("show"),'has class "show"'),e.ok(!/height/i.test(t.attr("style")),"has height reset"),a()})),o.trigger("click")})),QUnit.test("should collapse only the first collapse",(function(e){e.expect(2);var a=e.async(),o=['<div class="panel-group" id="accordion1">','<div class="panel">','<div id="collapse1" class="collapse"/>',"</div>","</div>",'<div class="panel-group" id="accordion2">','<div class="panel">','<div id="collapse2" class="collapse show"/>',"</div>","</div>"].join("");$(o).appendTo("#qunit-fixture");var s=$("#collapse1"),t=$("#collapse2");s.one("shown.bs.collapse",(function(){e.ok(s.hasClass("show")),e.ok(t.hasClass("show")),a()})).bootstrapCollapse("show")})),QUnit.test("should hide a collapsed element",(function(e){e.expect(1);var a=$('<div class="collapse"/>').bootstrapCollapse("hide");e.ok(!a.hasClass("show"),'does not have class "show"')})),QUnit.test("should not fire shown when show is prevented",(function(e){e.expect(1);var a=e.async();$('<div class="collapse"/>').on("show.bs.collapse",(function(o){o.preventDefault(),e.ok(!0,"show event fired"),a()})).on("shown.bs.collapse",(function(){e.ok(!1,"shown event fired")})).bootstrapCollapse("show")})),QUnit.test("should reset style to auto after finishing opening collapse",(function(e){e.expect(2);var a=e.async();$('<div class="collapse" style="height: 0px"/>').on("show.bs.collapse",(function(){e.strictEqual(this.style.height,"0px","height is 0px")})).on("shown.bs.collapse",(function(){e.strictEqual(this.style.height,"","height is auto"),a()})).bootstrapCollapse("show")})),QUnit.test("should reset style to auto after finishing closing collapse",(function(e){e.expect(1);var a=e.async();$('<div class="collapse"/>').on("shown.bs.collapse",(function(){$(this).bootstrapCollapse("hide")})).on("hidden.bs.collapse",(function(){e.strictEqual(this.style.height,"","height is auto"),a()})).bootstrapCollapse("show")})),QUnit.test('should remove "collapsed" class from target when collapse is shown',(function(e){e.expect(1);var a=e.async(),o=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",(function(){e.ok(!o.hasClass("collapsed"),"target does not have collapsed class"),a()})),o.trigger("click")})),QUnit.test('should add "collapsed" class to target when collapse is hidden',(function(e){e.expect(1);var a=e.async(),o=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1" class="show"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",(function(){e.ok(o.hasClass("collapsed"),"target has collapsed class"),a()})),o.trigger("click")})),QUnit.test('should remove "collapsed" class from all triggers targeting the collapse when the collapse is shown',(function(e){e.expect(2);var a=e.async(),o=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1"/>').appendTo("#qunit-fixture"),s=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",(function(){e.ok(!o.hasClass("collapsed"),"target trigger does not have collapsed class"),e.ok(!s.hasClass("collapsed"),"alt trigger does not have collapsed class"),a()})),o.trigger("click")})),QUnit.test('should add "collapsed" class to all triggers targeting the collapse when the collapse is hidden',(function(e){e.expect(2);var a=e.async(),o=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture"),s=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1" class="show"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",(function(){e.ok(o.hasClass("collapsed"),"target has collapsed class"),e.ok(s.hasClass("collapsed"),"alt trigger has collapsed class"),a()})),o.trigger("click")})),QUnit.test('should not close a collapse when initialized with "show" option if already shown',(function(e){e.expect(0);var a=e.async();$('<div id="test1" class="show"/>').appendTo("#qunit-fixture").on("hide.bs.collapse",(function(){e.ok(!1)})).bootstrapCollapse("show"),setTimeout(a,0)})),QUnit.test('should open a collapse when initialized with "show" option if not already shown',(function(e){e.expect(1);var a=e.async();$('<div id="test1" />').appendTo("#qunit-fixture").on("show.bs.collapse",(function(){e.ok(!0)})).bootstrapCollapse("show"),setTimeout(a,0)})),QUnit.test('should not show a collapse when initialized with "hide" option if already hidden',(function(e){e.expect(0);var a=e.async();$('<div class="collapse"></div>').appendTo("#qunit-fixture").on("show.bs.collapse",(function(){e.ok(!1,'showing a previously-uninitialized hidden collapse when the "hide" method is called')})).bootstrapCollapse("hide"),setTimeout(a,0)})),QUnit.test('should hide a collapse when initialized with "hide" option if not already hidden',(function(e){e.expect(1);var a=e.async();$('<div class="collapse show"></div>').appendTo("#qunit-fixture").on("hide.bs.collapse",(function(){e.ok(!0,'hiding a previously-uninitialized shown collapse when the "hide" method is called')})).bootstrapCollapse("hide"),setTimeout(a,0)})),QUnit.test('should remove "collapsed" class from active accordion target',(function(e){e.expect(3);var a=e.async(),o=$('<div id="accordion"><div class="card"/><div class="card"/><div class="card"/></div>').appendTo("#qunit-fixture").find(".card"),s=$('<a role="button" data-toggle="collapse" href="#body1" />').appendTo(o.eq(0));$('<div id="body1" class="show" data-parent="#accordion"/>').appendTo(o.eq(0));var t=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body2" />').appendTo(o.eq(1));$('<div id="body2" data-parent="#accordion"/>').appendTo(o.eq(1));var l=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body3" />').appendTo(o.eq(2));$('<div id="body3" data-parent="#accordion"/>').appendTo(o.eq(2)).on("shown.bs.collapse",(function(){e.ok(s.hasClass("collapsed"),'inactive target 1 does have class "collapsed"'),e.ok(t.hasClass("collapsed"),'inactive target 2 does have class "collapsed"'),e.ok(!l.hasClass("collapsed"),'active target 3 does not have class "collapsed"'),a()})),l.trigger("click")})),QUnit.test("should allow dots in data-parent",(function(e){e.expect(3);var a=e.async(),o=$('<div class="accordion"><div class="card"/><div class="card"/><div class="card"/></div>').appendTo("#qunit-fixture").find(".card"),s=$('<a role="button" data-toggle="collapse" href="#body1"/>').appendTo(o.eq(0));$('<div id="body1" class="show" data-parent=".accordion"/>').appendTo(o.eq(0));var t=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body2"/>').appendTo(o.eq(1));$('<div id="body2" data-parent=".accordion"/>').appendTo(o.eq(1));var l=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body3"/>').appendTo(o.eq(2));$('<div id="body3" data-parent=".accordion"/>').appendTo(o.eq(2)).on("shown.bs.collapse",(function(){e.ok(s.hasClass("collapsed"),'inactive target 1 does have class "collapsed"'),e.ok(t.hasClass("collapsed"),'inactive target 2 does have class "collapsed"'),e.ok(!l.hasClass("collapsed"),'active target 3 does not have class "collapsed"'),a()})),l.trigger("click")})),QUnit.test('should set aria-expanded="true" on trigger/control when collapse is shown',(function(e){e.expect(1);var a=e.async(),o=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1" aria-expanded="false"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",(function(){e.strictEqual(o.attr("aria-expanded"),"true",'aria-expanded on target is "true"'),a()})),o.trigger("click")})),QUnit.test('should set aria-expanded="false" on trigger/control when collapse is hidden',(function(e){e.expect(1);var a=e.async(),o=$('<a role="button" data-toggle="collapse" href="#test1" aria-expanded="true"/>').appendTo("#qunit-fixture");$('<div id="test1" class="show"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",(function(){e.strictEqual(o.attr("aria-expanded"),"false",'aria-expanded on target is "false"'),a()})),o.trigger("click")})),QUnit.test('should set aria-expanded="true" on all triggers targeting the collapse when the collapse is shown',(function(e){e.expect(2);var a=e.async(),o=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1" aria-expanded="false"/>').appendTo("#qunit-fixture"),s=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1" aria-expanded="false"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",(function(){e.strictEqual(o.attr("aria-expanded"),"true",'aria-expanded on trigger/control is "true"'),e.strictEqual(s.attr("aria-expanded"),"true",'aria-expanded on alternative trigger/control is "true"'),a()})),o.trigger("click")})),QUnit.test('should set aria-expanded="false" on all triggers targeting the collapse when the collapse is hidden',(function(e){e.expect(2);var a=e.async(),o=$('<a role="button" data-toggle="collapse" href="#test1" aria-expanded="true"/>').appendTo("#qunit-fixture"),s=$('<a role="button" data-toggle="collapse" href="#test1" aria-expanded="true"/>').appendTo("#qunit-fixture");$('<div id="test1" class="show"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",(function(){e.strictEqual(o.attr("aria-expanded"),"false",'aria-expanded on trigger/control is "false"'),e.strictEqual(s.attr("aria-expanded"),"false",'aria-expanded on alternative trigger/control is "false"'),a()})),o.trigger("click")})),QUnit.test('should change aria-expanded from active accordion trigger/control to "false" and set the trigger/control for the newly active one to "true"',(function(e){e.expect(3);var a=e.async(),o=$('<div id="accordion"><div class="card"/><div class="card"/><div class="card"/></div>').appendTo("#qunit-fixture").find(".card"),s=$('<a role="button" data-toggle="collapse" aria-expanded="true" href="#body1"/>').appendTo(o.eq(0));$('<div id="body1" class="show" data-parent="#accordion"/>').appendTo(o.eq(0));var t=$('<a role="button" data-toggle="collapse" aria-expanded="false" href="#body2" class="collapsed" aria-expanded="false" />').appendTo(o.eq(1));$('<div id="body2" data-parent="#accordion"/>').appendTo(o.eq(1));var l=$('<a class="collapsed" data-toggle="collapse" aria-expanded="false" role="button" href="#body3"/>').appendTo(o.eq(2));$('<div id="body3" data-parent="#accordion"/>').appendTo(o.eq(2)).on("shown.bs.collapse",(function(){e.strictEqual(s.attr("aria-expanded"),"false",'inactive trigger/control 1 has aria-expanded="false"'),e.strictEqual(t.attr("aria-expanded"),"false",'inactive trigger/control 2 has aria-expanded="false"'),e.strictEqual(l.attr("aria-expanded"),"true",'active trigger/control 3 has aria-expanded="true"'),a()})),l.trigger("click")})),QUnit.test("should not fire show event if show is prevented because other element is still transitioning",(function(e){e.expect(1);var a=e.async(),o=!1,s=$('<div id="accordion"><div class="card"/><div class="card"/></div>').appendTo("#qunit-fixture").find(".card"),t=$('<a role="button" data-toggle="collapse" href="#body1"/>').appendTo(s.eq(0));$('<div id="body1" class="collapse" data-parent="#accordion"/>').appendTo(s.eq(0)).on("show.bs.collapse",(function(){o=!0}));var l=$('<a role="button" data-toggle="collapse" href="#body2"/>').appendTo(s.eq(1)),n=$('<div id="body2" class="collapse" data-parent="#accordion"/>').appendTo(s.eq(1));l.trigger("click"),n.toggleClass("show collapsing").data("bs.collapse")._isTransitioning=1,t.trigger("click"),setTimeout((function(){e.ok(!o,"show event did not fire"),a()}),1)})),QUnit.test('should add "collapsed" class to target when collapse is hidden via manual invocation',(function(e){e.expect(1);var a=e.async(),o=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1" class="show"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",(function(){e.ok(o.hasClass("collapsed")),a()})).bootstrapCollapse("hide")})),QUnit.test('should remove "collapsed" class from target when collapse is shown via manual invocation',(function(e){e.expect(1);var a=e.async(),o=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",(function(){e.ok(!o.hasClass("collapsed")),a()})).bootstrapCollapse("show")})),QUnit.test("should allow accordion to use children other than card",(function(e){e.expect(4);var a=e.async();$('<div id="accordion"><div class="item"><a id="linkTrigger" data-toggle="collapse" href="#collapseOne" aria-expanded="false" aria-controls="collapseOne"></a><div id="collapseOne" class="collapse" role="tabpanel" aria-labelledby="headingThree" data-parent="#accordion"></div></div><div class="item"><a id="linkTriggerTwo" data-toggle="collapse" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo"></a><div id="collapseTwo" class="collapse show" role="tabpanel" aria-labelledby="headingTwo" data-parent="#accordion"></div></div></div>').appendTo("#qunit-fixture");var o=$("#linkTrigger"),s=$("#linkTriggerTwo"),t=$("#collapseOne"),l=$("#collapseTwo");t.on("shown.bs.collapse",(function(){e.ok(t.hasClass("show"),"#collapseOne is shown"),e.ok(!l.hasClass("show"),"#collapseTwo is not shown"),l.on("shown.bs.collapse",(function(){e.ok(!t.hasClass("show"),"#collapseOne is not shown"),e.ok(l.hasClass("show"),"#collapseTwo is shown"),a()})),s.trigger($.Event("click"))})),o.trigger($.Event("click"))})),QUnit.test("should allow accordion to contain nested elements",(function(e){e.expect(4);var a=e.async();$('<div id="accordion"><div class="row"><div class="col-lg-6"><div class="item"><a id="linkTrigger" data-toggle="collapse" href="#collapseOne" aria-expanded="false" aria-controls="collapseOne"></a><div id="collapseOne" class="collapse" role="tabpanel" aria-labelledby="headingThree" data-parent="#accordion"></div></div></div><div class="col-lg-6"><div class="item"><a id="linkTriggerTwo" data-toggle="collapse" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo"></a><div id="collapseTwo" class="collapse show" role="tabpanel" aria-labelledby="headingTwo" data-parent="#accordion"></div></div></div></div></div>').appendTo("#qunit-fixture");var o=$("#linkTrigger"),s=$("#linkTriggerTwo"),t=$("#collapseOne"),l=$("#collapseTwo");t.on("shown.bs.collapse",(function(){e.ok(t.hasClass("show"),"#collapseOne is shown"),e.ok(!l.hasClass("show"),"#collapseTwo is not shown"),l.on("shown.bs.collapse",(function(){e.ok(!t.hasClass("show"),"#collapseOne is not shown"),e.ok(l.hasClass("show"),"#collapseTwo is shown"),a()})),s.trigger($.Event("click"))})),o.trigger($.Event("click"))})),QUnit.test("should allow accordion to target multiple elements",(function(e){e.expect(8);var a=e.async();$('<div id="accordion"><a id="linkTriggerOne" data-toggle="collapse" data-target=".collapseOne" href="#" aria-expanded="false" aria-controls="collapseOne"></a><a id="linkTriggerTwo" data-toggle="collapse" data-target=".collapseTwo" href="#" aria-expanded="false" aria-controls="collapseTwo"></a><div id="collapseOneOne" class="collapse collapseOne" role="tabpanel" data-parent="#accordion"></div><div id="collapseOneTwo" class="collapse collapseOne" role="tabpanel" data-parent="#accordion"></div><div id="collapseTwoOne" class="collapse collapseTwo" role="tabpanel" data-parent="#accordion"></div><div id="collapseTwoTwo" class="collapse collapseTwo" role="tabpanel" data-parent="#accordion"></div></div>').appendTo("#qunit-fixture");var o=$("#linkTriggerOne"),s=$("#linkTriggerTwo"),t=$("#collapseOneOne"),l=$("#collapseOneTwo"),n=$("#collapseTwoOne"),i=$("#collapseTwoTwo"),c={one:!1,two:!1};function d(){e.ok(t.hasClass("show"),"#collapseOneOne is shown"),e.ok(l.hasClass("show"),"#collapseOneTwo is shown"),e.ok(!n.hasClass("show"),"#collapseTwoOne is not shown"),e.ok(!i.hasClass("show"),"#collapseTwoTwo is not shown"),s.trigger($.Event("click"))}function r(){e.ok(!t.hasClass("show"),"#collapseOneOne is not shown"),e.ok(!l.hasClass("show"),"#collapseOneTwo is not shown"),e.ok(n.hasClass("show"),"#collapseTwoOne is shown"),e.ok(i.hasClass("show"),"#collapseTwoTwo is shown"),a()}t.on("shown.bs.collapse",(function(){c.one?d():c.one=!0})),l.on("shown.bs.collapse",(function(){c.one?d():c.one=!0})),n.on("shown.bs.collapse",(function(){c.two?r():c.two=!0})),i.on("shown.bs.collapse",(function(){c.two?r():c.two=!0})),o.trigger($.Event("click"))})),QUnit.test("should collapse accordion children but not nested accordion children",(function(e){e.expect(9);var a=e.async();$('<div id="accordion"><div class="item"><a id="linkTrigger" data-toggle="collapse" href="#collapseOne" aria-expanded="false" aria-controls="collapseOne"></a><div id="collapseOne" data-parent="#accordion" class="collapse" role="tabpanel" aria-labelledby="headingThree"><div id="nestedAccordion"><div class="item"><a id="nestedLinkTrigger" data-toggle="collapse" href="#nestedCollapseOne" aria-expanded="false" aria-controls="nestedCollapseOne"></a><div id="nestedCollapseOne" data-parent="#nestedAccordion" class="collapse" role="tabpanel" aria-labelledby="headingThree"></div></div></div></div></div><div class="item"><a id="linkTriggerTwo" data-toggle="collapse" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo"></a><div id="collapseTwo" data-parent="#accordion" class="collapse show" role="tabpanel" aria-labelledby="headingTwo"></div></div></div>').appendTo("#qunit-fixture");var o=$("#linkTrigger"),s=$("#linkTriggerTwo"),t=$("#nestedLinkTrigger"),l=$("#collapseOne"),n=$("#collapseTwo"),i=$("#nestedCollapseOne");l.one("shown.bs.collapse",(function(){e.ok(l.hasClass("show"),"#collapseOne is shown"),e.ok(!n.hasClass("show"),"#collapseTwo is not shown"),e.ok(!$("#nestedCollapseOne").hasClass("show"),"#nestedCollapseOne is not shown"),i.one("shown.bs.collapse",(function(){e.ok(l.hasClass("show"),"#collapseOne is shown"),e.ok(!n.hasClass("show"),"#collapseTwo is not shown"),e.ok(i.hasClass("show"),"#nestedCollapseOne is shown"),n.one("shown.bs.collapse",(function(){e.ok(!l.hasClass("show"),"#collapseOne is not shown"),e.ok(n.hasClass("show"),"#collapseTwo is shown"),e.ok(i.hasClass("show"),"#nestedCollapseOne is shown"),a()})),s.trigger($.Event("click"))})),t.trigger($.Event("click"))})),o.trigger($.Event("click"))})),QUnit.test("should not prevent event for input",(function(e){e.expect(3);var a=e.async(),o=$('<input type="checkbox" data-toggle="collapse" data-target="#collapsediv1" />').appendTo("#qunit-fixture");$('<div id="collapsediv1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",(function(){e.ok($(this).hasClass("show")),e.ok("true"===o.attr("aria-expanded")),e.ok(o.prop("checked")),a()})),o.trigger($.Event("click"))})),QUnit.test('should add "collapsed" class to triggers only when all the targeted collapse are hidden',(function(e){e.expect(9);var a=e.async(),o=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture"),s=$('<a role="button" data-toggle="collapse" href="#test2"/>').appendTo("#qunit-fixture"),t=$('<a role="button" data-toggle="collapse" href=".multi"/>').appendTo("#qunit-fixture"),l=$('<div id="test1" class="multi"/>').appendTo("#qunit-fixture"),n=$('<div id="test2" class="multi"/>').appendTo("#qunit-fixture");n.one("shown.bs.collapse",(function(){e.ok(!o.hasClass("collapsed"),"trigger1 does not have collapsed class"),e.ok(!s.hasClass("collapsed"),"trigger2 does not have collapsed class"),e.ok(!t.hasClass("collapsed"),"trigger3 does not have collapsed class"),n.one("hidden.bs.collapse",(function(){e.ok(!o.hasClass("collapsed"),"trigger1 does not have collapsed class"),e.ok(s.hasClass("collapsed"),"trigger2 has collapsed class"),e.ok(!t.hasClass("collapsed"),"trigger3 does not have collapsed class"),l.one("hidden.bs.collapse",(function(){e.ok(o.hasClass("collapsed"),"trigger1 has collapsed class"),e.ok(s.hasClass("collapsed"),"trigger2 has collapsed class"),e.ok(t.hasClass("collapsed"),"trigger3 has collapsed class"),a()})),o.trigger("click")})),s.trigger("click")})),t.trigger("click")})),QUnit.test('should set aria-expanded="true" to triggers targeting shown collaspe and aria-expanded="false" only when all the targeted collapses are shown',(function(e){e.expect(9);var a=e.async(),o=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture"),s=$('<a role="button" data-toggle="collapse" href="#test2"/>').appendTo("#qunit-fixture"),t=$('<a role="button" data-toggle="collapse" href=".multi"/>').appendTo("#qunit-fixture"),l=$('<div id="test1" class="multi collapse"/>').appendTo("#qunit-fixture"),n=$('<div id="test2" class="multi collapse"/>').appendTo("#qunit-fixture");n.one("shown.bs.collapse",(function(){e.strictEqual(o.attr("aria-expanded"),"true",'aria-expanded on trigger1 is "true"'),e.strictEqual(s.attr("aria-expanded"),"true",'aria-expanded on trigger2 is "true"'),e.strictEqual(t.attr("aria-expanded"),"true",'aria-expanded on trigger3 is "true"'),n.one("hidden.bs.collapse",(function(){e.strictEqual(o.attr("aria-expanded"),"true",'aria-expanded on trigger1 is "true"'),e.strictEqual(s.attr("aria-expanded"),"false",'aria-expanded on trigger2 is "false"'),e.strictEqual(t.attr("aria-expanded"),"true",'aria-expanded on trigger3 is "true"'),l.one("hidden.bs.collapse",(function(){e.strictEqual(o.attr("aria-expanded"),"false",'aria-expanded on trigger1 is "fasle"'),e.strictEqual(s.attr("aria-expanded"),"false",'aria-expanded on trigger2 is "false"'),e.strictEqual(t.attr("aria-expanded"),"false",'aria-expanded on trigger3 is "false"'),a()})),o.trigger("click")})),s.trigger("click")})),t.trigger("click")})),QUnit.test("should not prevent interactions inside the collapse element",(function(e){e.expect(2);var a=e.async(),o=$('<input type="checkbox" data-toggle="collapse" data-target="#collapsediv1" />').appendTo("#qunit-fixture");$('<div id="collapsediv1" class="collapse"> <input type="checkbox" id="testCheckbox" /></div>').appendTo("#qunit-fixture").on("shown.bs.collapse",(function(){e.ok(o.prop("checked"),"$trigger is checked");var s=$("#testCheckbox");s.trigger($.Event("click")),setTimeout((function(){e.ok(s.prop("checked"),"$testCheckbox is checked too"),a()}),5)})),o.trigger($.Event("click"))})),QUnit.test("should allow jquery object in parent config",(function(e){e.expect(1),$('<div class="my-collapse">  <div class="item">    <a data-toggle="collapse" href="#">Toggle item</a>    <div class="collapse">Lorem ipsum</div>  </div></div>').appendTo("#qunit-fixture");try{$('[data-toggle="collapse"]').bootstrapCollapse({parent:$(".my-collapse")}),e.ok(!0,"collapse correctly created")}catch(a){e.ok(!1,"collapse not created")}})),QUnit.test("should allow DOM object in parent config",(function(e){e.expect(1),$('<div class="my-collapse">  <div class="item">    <a data-toggle="collapse" href="#">Toggle item</a>    <div class="collapse">Lorem ipsum</div>  </div></div>').appendTo("#qunit-fixture");try{$('[data-toggle="collapse"]').bootstrapCollapse({parent:$(".my-collapse")[0]}),e.ok(!0,"collapse correctly created")}catch(a){e.ok(!1,"collapse not created")}}))}));