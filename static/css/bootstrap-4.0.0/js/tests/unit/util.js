$((function(){"use strict";QUnit.module("util"),QUnit.test("Util.getSelectorFromElement should return the correct element",(function(e){e.expect(5);var t=$('<div data-target="body"></div>').appendTo($("#qunit-fixture"));e.strictEqual(Util.getSelectorFromElement(t[0]),"body");var i=$('<div data-target="#fakeDiv"></div>').appendTo($("#qunit-fixture"));e.strictEqual(Util.getSelectorFromElement(i[0]),null);var l=$('<div data-target="#collapse:Example"></div>').appendTo($("#qunit-fixture"));$('<div id="collapse:Example"></div>').appendTo($("#qunit-fixture")),e.strictEqual(Util.getSelectorFromElement(l[0]),"#collapse\\:Example");var n=$.escapeSelector;delete $.escapeSelector,e.ok(void 0===$.escapeSelector,"$.escapeSelector undefined"),e.strictEqual(Util.getSelectorFromElement(l[0]),"#collapse\\:Example"),$.escapeSelector=n})),QUnit.test("Util.typeCheckConfig should thrown an error when a bad config is passed",(function(e){e.expect(1);try{Util.typeCheckConfig("collapse",{toggle:!0,parent:777},{toggle:"boolean",parent:"(string|element)"})}catch(t){e.strictEqual(t.message,'COLLAPSE: Option "parent" provided type "number" but expected type "(string|element)".')}})),QUnit.test("Util.isElement should check if we passed an element or not",(function(e){e.expect(3);var t=$('<div id="test"></div>').appendTo($("#qunit-fixture"));e.strictEqual(Util.isElement(t),1),e.strictEqual(Util.isElement(t[0]),1),e.strictEqual(void 0===Util.isElement({}),!0)})),QUnit.test("Util.getUID should generate a new id uniq",(function(e){e.expect(2);var t=Util.getUID("test"),i=Util.getUID("test");e.ok(t!==i,t+" !== "+i),t=Util.getUID("test"),$('<div id="'+t+'"></div>').appendTo($("#qunit-fixture")),i=Util.getUID("test"),e.ok(t!==i,t+" !== "+i)}))}));