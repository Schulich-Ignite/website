$((function(){"use strict";QUnit.module("modal plugin"),QUnit.test("should be defined on jquery object",(function(t){t.expect(1),t.ok($(document.body).modal,"modal method is defined")})),QUnit.module("modal",{before:function(){$('<style type="text/css"> .modal-scrollbar-measure { position: absolute; top: -9999px; width: 50px; height: 50px; overflow: scroll; } </style>').appendTo("head"),$.fn.getScrollbarWidth=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",document.body.appendChild(t);var o=t.offsetWidth-t.clientWidth;return document.body.removeChild(t),o},$("html").css("padding-right","16px")},beforeEach:function(){$.fn.bootstrapModal=$.fn.modal.noConflict()},afterEach:function(){$(".modal-backdrop, #modal-test").remove(),$(document.body).removeClass("modal-open"),$.fn.modal=$.fn.bootstrapModal,delete $.fn.bootstrapModal}}),QUnit.test("should provide no conflict",(function(t){t.expect(1),t.strictEqual(typeof $.fn.modal,"undefined","modal was set back to undefined (orig value)")})),QUnit.test("should throw explicit error on undefined method",(function(t){t.expect(1);var o=$('<div id="modal-test"/>');o.bootstrapModal();try{o.bootstrapModal("noMethod")}catch(o){t.strictEqual(o.message,'No method named "noMethod"')}})),QUnit.test("should return jquery collection containing the element",(function(t){t.expect(2);var o=$('<div id="modal-test"/>'),e=o.bootstrapModal();t.ok(e instanceof $,"returns jquery collection"),t.strictEqual(e[0],o[0],"collection contains element")})),QUnit.test("should expose defaults var for settings",(function(t){t.expect(1),t.ok($.fn.bootstrapModal.Constructor.Default,"default object exposed")})),QUnit.test("should insert into dom when show method is called",(function(t){t.expect(1);var o=t.async();$('<div id="modal-test"/>').on("shown.bs.modal",(function(){t.notEqual($("#modal-test").length,0,"modal inserted into dom"),o()})).bootstrapModal("show")})),QUnit.test("should fire show event",(function(t){t.expect(1);var o=t.async();$('<div id="modal-test"/>').on("show.bs.modal",(function(){t.ok(!0,"show event fired"),o()})).bootstrapModal("show")})),QUnit.test("should not fire shown when show was prevented",(function(t){t.expect(1);var o=t.async();$('<div id="modal-test"/>').on("show.bs.modal",(function(e){e.preventDefault(),t.ok(!0,"show event fired"),o()})).on("shown.bs.modal",(function(){t.ok(!1,"shown event fired")})).bootstrapModal("show")})),QUnit.test("should hide modal when hide is called",(function(t){t.expect(3);var o=t.async();$('<div id="modal-test"/>').on("shown.bs.modal",(function(){t.ok($("#modal-test").is(":visible"),"modal visible"),t.notEqual($("#modal-test").length,0,"modal inserted into dom"),$(this).bootstrapModal("hide")})).on("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),o()})).bootstrapModal("show")})),QUnit.test("should toggle when toggle is called",(function(t){t.expect(3);var o=t.async();$('<div id="modal-test"/>').on("shown.bs.modal",(function(){t.ok($("#modal-test").is(":visible"),"modal visible"),t.notEqual($("#modal-test").length,0,"modal inserted into dom"),$(this).bootstrapModal("toggle")})).on("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),o()})).bootstrapModal("toggle")})),QUnit.test('should remove from dom when click [data-dismiss="modal"]',(function(t){t.expect(3);var o=t.async();$('<div id="modal-test"><span class="close" data-dismiss="modal"/></div>').on("shown.bs.modal",(function(){t.ok($("#modal-test").is(":visible"),"modal visible"),t.notEqual($("#modal-test").length,0,"modal inserted into dom"),$(this).find(".close").trigger("click")})).on("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),o()})).bootstrapModal("toggle")})),QUnit.test('should allow modal close with "backdrop:false"',(function(t){t.expect(2);var o=t.async();$('<div id="modal-test" data-backdrop="false"/>').on("shown.bs.modal",(function(){t.ok($("#modal-test").is(":visible"),"modal visible"),$(this).bootstrapModal("hide")})).on("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),o()})).bootstrapModal("show")})),QUnit.test("should close modal when clicking outside of modal-content",(function(t){t.expect(3);var o=t.async();$('<div id="modal-test"><div class="contents"/></div>').on("shown.bs.modal",(function(){t.notEqual($("#modal-test").length,0,"modal inserted into dom"),$(".contents").trigger("click"),t.ok($("#modal-test").is(":visible"),"modal visible"),$("#modal-test").trigger("click")})).on("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),o()})).bootstrapModal("show")})),QUnit.test('should not close modal when clicking outside of modal-content if data-backdrop="true"',(function(t){t.expect(1);var o=t.async();$('<div id="modal-test" data-backdrop="false"><div class="contents"/></div>').on("shown.bs.modal",(function(){$("#modal-test").trigger("click"),t.ok($("#modal-test").is(":visible"),"modal not hidden"),o()})).bootstrapModal("show")})),QUnit.test("should close modal when escape key is pressed via keydown",(function(t){t.expect(3);var o=t.async(),e=$('<div id="modal-test"/>');e.on("shown.bs.modal",(function(){t.ok($("#modal-test").length,"modal inserted into dom"),t.ok($("#modal-test").is(":visible"),"modal visible"),e.trigger($.Event("keydown",{which:27})),setTimeout((function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),e.remove(),o()}),0)})).bootstrapModal("show")})),QUnit.test("should not close modal when escape key is pressed via keyup",(function(t){t.expect(3);var o=t.async(),e=$('<div id="modal-test"/>');e.on("shown.bs.modal",(function(){t.ok($("#modal-test").length,"modal inserted into dom"),t.ok($("#modal-test").is(":visible"),"modal visible"),e.trigger($.Event("keyup",{which:27})),setTimeout((function(){t.ok(e.is(":visible"),"modal still visible"),e.remove(),o()}),0)})).bootstrapModal("show")})),QUnit.test("should trigger hide event once when clicking outside of modal-content",(function(t){t.expect(1);var o,e=t.async();$('<div id="modal-test"><div class="contents"/></div>').on("shown.bs.modal",(function(){o=0,$("#modal-test").trigger("click")})).on("hide.bs.modal",(function(){o+=1,t.strictEqual(o,1,"modal hide triggered once"),e()})).bootstrapModal("show")})),QUnit.test("should remove aria-hidden attribute when shown, add it back when hidden",(function(t){t.expect(3);var o=t.async();$('<div id="modal-test" aria-hidden="true"/>').on("shown.bs.modal",(function(){t.notOk($("#modal-test").is("[aria-hidden]"),"aria-hidden attribute removed"),$(this).bootstrapModal("hide")})).on("hidden.bs.modal",(function(){t.ok($("#modal-test").is("[aria-hidden]"),"aria-hidden attribute added"),t.strictEqual($("#modal-test").attr("aria-hidden"),"true",'correct aria-hidden="true" added'),o()})).bootstrapModal("show")})),QUnit.test('should close reopened modal with [data-dismiss="modal"] click',(function(t){t.expect(2);var o=t.async();$('<div id="modal-test"><div class="contents"><div id="close" data-dismiss="modal"/></div></div>').one("shown.bs.modal",(function(){$("#close").trigger("click")})).one("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),$(this).one("shown.bs.modal",(function(){$("#close").trigger("click")})).one("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),o()})).bootstrapModal("show")})).bootstrapModal("show")})),QUnit.test("should restore focus to toggling element when modal is hidden after having been opened via data-api",(function(t){t.expect(1);var o=t.async(),e=$('<button data-toggle="modal" data-target="#modal-test"/>').appendTo("#qunit-fixture");$('<div id="modal-test"><div class="contents"><div id="close" data-dismiss="modal"/></div></div>').on("hidden.bs.modal",(function(){setTimeout((function(){t.ok($(document.activeElement).is(e),"toggling element is once again focused"),o()}),0)})).on("shown.bs.modal",(function(){$("#close").trigger("click")})).appendTo("#qunit-fixture"),e.trigger("click")})),QUnit.test("should not restore focus to toggling element if the associated show event gets prevented",(function(t){t.expect(1);var o=t.async(),e=$('<button data-toggle="modal" data-target="#modal-test"/>').appendTo("#qunit-fixture"),i=$('<button id="other-btn"/>').appendTo("#qunit-fixture");$('<div id="modal-test"><div class="contents"><div id="close" data-dismiss="modal"/></div>').one("show.bs.modal",(function(t){t.preventDefault(),i.trigger("focus"),setTimeout($.proxy((function(){$(this).bootstrapModal("show")}),this),0)})).on("hidden.bs.modal",(function(){setTimeout((function(){t.ok($(document.activeElement).is(i),"focus returned to toggling element"),o()}),0)})).on("shown.bs.modal",(function(){$("#close").trigger("click")})).appendTo("#qunit-fixture"),e.trigger("click")})),QUnit.test("should adjust the inline padding of the modal when opening",(function(t){t.expect(1);var o=t.async();$('<div id="modal-test"/>').on("shown.bs.modal",(function(){var e=$(this).getScrollbarWidth()+"px",i=$(this).css("padding-right");t.strictEqual(i,e,"modal padding should be adjusted while opening"),o()})).bootstrapModal("show")})),QUnit.test("should adjust the inline body padding when opening and restore when closing",(function(t){t.expect(2);var o=t.async(),e=$(document.body),i=e.css("padding-right");$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){var d=e.css("padding-right");t.strictEqual(d,i,"body padding should be reset after closing"),e.removeAttr("style"),o()})).on("shown.bs.modal",(function(){var o=parseFloat(i)+$(this).getScrollbarWidth()+"px",d=e.css("padding-right");t.strictEqual(d,o,"body padding should be adjusted while opening"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should store the original body padding in data-padding-right before showing",(function(t){t.expect(2);var o=t.async(),e=$(document.body);e.css("padding-right","0px"),$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){t.strictEqual(typeof e.data("padding-right"),"undefined","data-padding-right should be cleared after closing"),e.removeAttr("style"),o()})).on("shown.bs.modal",(function(){t.strictEqual(e.data("padding-right"),"0px","original body padding should be stored in data-padding-right"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should not adjust the inline body padding when it does not overflow",(function(t){t.expect(1);var o=t.async(),e=$(document.body),i=e.css("padding-right");e.css("overflow","hidden"),$("html").css("padding-right","0px"),$('<div id="modal-test"/>').on("shown.bs.modal",(function(){var d=e.css("padding-right");t.strictEqual(d,i,"body padding should not be adjusted"),$(this).bootstrapModal("hide"),e.css("overflow","auto"),$("html").css("padding-right","16px"),o()})).bootstrapModal("show")})),QUnit.test("should adjust the inline padding of fixed elements when opening and restore when closing",(function(t){t.expect(2);var o=t.async(),e=$('<div class="fixed-top"></div>').appendTo("#qunit-fixture"),i=e.css("padding-right");$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){var d=e.css("padding-right");t.strictEqual(d,i,"fixed element padding should be reset after closing"),e.remove(),o()})).on("shown.bs.modal",(function(){var o=parseFloat(i)+$(this).getScrollbarWidth()+"px",d=e.css("padding-right");t.strictEqual(d,o,"fixed element padding should be adjusted while opening"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should store the original padding of fixed elements in data-padding-right before showing",(function(t){t.expect(2);var o=t.async(),e=$('<div class="fixed-top"></div>').appendTo("#qunit-fixture");e.css("padding-right","0px"),$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){t.strictEqual(typeof e.data("padding-right"),"undefined","data-padding-right should be cleared after closing"),e.remove(),o()})).on("shown.bs.modal",(function(){t.strictEqual(e.data("padding-right"),"0px","original fixed element padding should be stored in data-padding-right"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should adjust the inline margin of sticky elements when opening and restore when closing",(function(t){t.expect(2);var o=t.async(),e=$('<div class="sticky-top"></div>').appendTo("#qunit-fixture"),i=e.css("margin-right");$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){var d=e.css("margin-right");t.strictEqual(d,i,"sticky element margin should be reset after closing"),e.remove(),o()})).on("shown.bs.modal",(function(){var o=parseFloat(i)-$(this).getScrollbarWidth()+"px",d=e.css("margin-right");t.strictEqual(d,o,"sticky element margin should be adjusted while opening"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should store the original margin of sticky elements in data-margin-right before showing",(function(t){t.expect(2);var o=t.async(),e=$('<div class="sticky-top"></div>').appendTo("#qunit-fixture");e.css("margin-right","0px"),$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){t.strictEqual(typeof e.data("margin-right"),"undefined","data-margin-right should be cleared after closing"),e.remove(),o()})).on("shown.bs.modal",(function(){t.strictEqual(e.data("margin-right"),"0px","original sticky element margin should be stored in data-margin-right"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should adjust the inline margin of the navbar-toggler when opening and restore when closing",(function(t){t.expect(2);var o=t.async(),e=$('<div class="navbar-toggler"></div>').appendTo("#qunit-fixture"),i=e.css("margin-right");$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){var d=e.css("margin-right");t.strictEqual(d,i,"navbar-toggler margin should be reset after closing"),e.remove(),o()})).on("shown.bs.modal",(function(){var o=parseFloat(i)+$(this).getScrollbarWidth()+"px",d=e.css("margin-right");t.strictEqual(d,o,"navbar-toggler margin should be adjusted while opening"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should store the original margin of the navbar-toggler in data-margin-right before showing",(function(t){t.expect(2);var o=t.async(),e=$('<div class="navbar-toggler"></div>').appendTo("#qunit-fixture");e.css("margin-right","0px"),$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){t.strictEqual(typeof e.data("margin-right"),"undefined","data-margin-right should be cleared after closing"),e.remove(),o()})).on("shown.bs.modal",(function(){t.strictEqual(e.data("margin-right"),"0px","original navbar-toggler margin should be stored in data-margin-right"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should ignore values set via CSS when trying to restore body padding after closing",(function(t){t.expect(1);var o=t.async(),e=$(document.body),i=$("<style>body { padding-right: 42px; }</style>").appendTo("head");$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){t.strictEqual(e.attr("style").indexOf("padding-right"),-1,"body does not have inline padding set"),i.remove(),o()})).on("shown.bs.modal",(function(){$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should ignore other inline styles when trying to restore body padding after closing",(function(t){t.expect(2);var o=t.async(),e=$(document.body),i=$("<style>body { padding-right: 42px; }</style>").appendTo("head");e.css("color","red"),$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){t.strictEqual(e[0].style.paddingRight,"","body does not have inline padding set"),t.strictEqual(e[0].style.color,"red","body still has other inline styles set"),e.removeAttr("style"),i.remove(),o()})).on("shown.bs.modal",(function(){$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should properly restore non-pixel inline body padding after closing",(function(t){t.expect(1);var o=t.async(),e=$(document.body);e.css("padding-right","5%"),$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){t.strictEqual(e[0].style.paddingRight,"5%","body does not have inline padding set"),e.removeAttr("style"),o()})).on("shown.bs.modal",(function(){$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should not follow link in area tag",(function(t){t.expect(2);var o=t.async();$('<map><area id="test" shape="default" data-toggle="modal" data-target="#modal-test" href="demo.html"/></map>').appendTo("#qunit-fixture"),$('<div id="modal-test"><div class="contents"><div id="close" data-dismiss="modal"/></div></div>').appendTo("#qunit-fixture"),$("#test").on("click.bs.modal.data-api",(function(e){t.notOk(e.isDefaultPrevented(),"navigating to href will happen"),setTimeout((function(){t.ok(e.isDefaultPrevented(),"model shown instead of navigating to href"),o()}),1)})).trigger("click")})),QUnit.test("should not parse target as html",(function(t){t.expect(1);var o=t.async();$('<button data-toggle="modal" data-target="&lt;div id=&quot;modal-test&quot;&gt;&lt;div class=&quot;contents&quot;&lt;div&lt;div id=&quot;close&quot; data-dismiss=&quot;modal&quot;/&gt;&lt;/div&gt;&lt;/div&gt;"/>').appendTo("#qunit-fixture").trigger("click"),setTimeout((function(){t.strictEqual($("#modal-test").length,0,"target has not been parsed and added to the document"),o()}),1)})),QUnit.test("should not execute js from target",(function(t){t.expect(0);var o=t.async(),e=$('<button data-toggle="modal" data-target="&lt;div&gt;&lt;image src=&quot;missing.png&quot; onerror=&quot;$(&apos;#qunit-fixture button.control&apos;).trigger(&apos;click&apos;)&quot;&gt;&lt;/div&gt;"/>').appendTo("#qunit-fixture");$("<button>").addClass("control").on("click",(function(){t.notOk(!0,"XSS payload is not executed as js")})).appendTo("#qunit-fixture"),e.trigger("click"),setTimeout(o,500)})),QUnit.test("should not try to open a modal which is already visible",(function(t){t.expect(1);var o=t.async(),e=0;$('<div id="modal-test"/>').on("shown.bs.modal",(function(){e++})).on("hidden.bs.modal",(function(){t.strictEqual(e,1,"show() runs only once"),o()})).bootstrapModal("show").bootstrapModal("show").bootstrapModal("hide")}))}));